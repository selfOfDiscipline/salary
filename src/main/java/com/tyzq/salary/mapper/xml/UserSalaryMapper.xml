<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tyzq.salary.mapper.UserSalaryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.tyzq.salary.model.UserSalary">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="user_account" property="userAccount" />
        <result column="user_role_name" property="userRoleName" />
        <result column="salary_dept_name" property="salaryDeptName" />
        <result column="salary_date" property="salaryDate" />
        <result column="new_entry_attendance_days" property="newEntryAttendanceDays" />
        <result column="positive_before_attendance_days" property="positiveBeforeAttendanceDays" />
        <result column="positive_after_attendance_days" property="positiveAfterAttendanceDays" />
        <result column="positive_after_other_attendance_days" property="positiveAfterOtherAttendanceDays" />
        <result column="positive_after_sick_attendance_days" property="positiveAfterSickAttendanceDays" />
        <result column="positive_before_other_attendance_days" property="positiveBeforeOtherAttendanceDays" />
        <result column="positive_before_sick_attendance_days" property="positiveBeforeSickAttendanceDays" />
        <result column="other_absence_days" property="otherAbsenceDays" />
        <result column="sick_adsence_days" property="sickAdsenceDays" />
        <result column="month_rewords_money" property="monthRewordsMoney" />
        <result column="month_performance_ratio" property="monthPerformanceRatio" />
        <result column="month_bank_salary" property="monthBankSalary" />
        <result column="month_other_bank_salary" property="monthOtherBankSalary" />
        <result column="month_base_salary" property="monthBaseSalary" />
        <result column="month_performance_salary" property="monthPerformanceSalary" />
        <result column="month_post_salary" property="monthPostSalary" />
        <result column="month_post_subsidy" property="monthPostSubsidy" />
        <result column="month_other_subsidy" property="monthOtherSubsidy" />
        <result column="tax_before_base_salary_total" property="taxBeforeBaseSalaryTotal" />
        <result column="yangl_person_pay_money" property="yanglPersonPayMoney" />
        <result column="yangl_company_pay_money" property="yanglCompanyPayMoney" />
        <result column="shiy_person_pay_money" property="shiyPersonPayMoney" />
        <result column="shiy_company_pay_money" property="shiyCompanyPayMoney" />
        <result column="gongs_person_pay_money" property="gongsPersonPayMoney" />
        <result column="gongs_company_pay_money" property="gongsCompanyPayMoney" />
        <result column="shengy_person_pay_money" property="shengyPersonPayMoney" />
        <result column="shengy_company_pay_money" property="shengyCompanyPayMoney" />
        <result column="yil_person_pay_money" property="yilPersonPayMoney" />
        <result column="yil_company_pay_money" property="yilCompanyPayMoney" />
        <result column="other_person_pay_money" property="otherPersonPayMoney" />
        <result column="other_company_pay_money" property="otherCompanyPayMoney" />
        <result column="social_security_person_pay_total" property="socialSecurityPersonPayTotal" />
        <result column="socail_security_company_pay_total" property="socailSecurityCompanyPayTotal" />
        <result column="housing_fund_person_pay_total" property="housingFundPersonPayTotal" />
        <result column="housing_fund_company_pay_total" property="housingFundCompanyPayTotal" />
        <result column="month_person_pay_total" property="monthPersonPayTotal" />
        <result column="month_company_pay_total" property="monthCompanyPayTotal" />
        <result column="month_person_company_pay_total" property="monthPersonCompanyPayTotal" />
        <result column="bank_tax_before_should_salary" property="bankTaxBeforeShouldSalary" />
        <result column="bank_taxable_self_money" property="bankTaxableSelfMoney" />
        <result column="bank_tax_ratio" property="bankTaxRatio" />
        <result column="bank_plan_should_tax_money" property="bankPlanShouldTaxMoney" />
        <result column="bank_reality_should_tax_money" property="bankRealityShouldTaxMoney" />
        <result column="bank_reality_salary" property="bankRealitySalary" />
        <result column="other_bank_should_tax_money" property="otherBankShouldTaxMoney" />
        <result column="other_bank_reality_salary" property="otherBankRealitySalary" />
        <result column="month_salary_reality_total" property="monthSalaryRealityTotal" />
        <result column="add_computer_subsidy" property="addComputerSubsidy" />
        <result column="add_other_subsidy" property="addOtherSubsidy" />
        <result column="deduct_sick" property="deductSick" />
        <result column="deduct_thing" property="deductThing" />
        <result column="deduct_other" property="deductOther" />
        <result column="deduct_service_fee" property="deductServiceFee" />
        <result column="salary_dept_id" property="salaryDeptId" />
        <result column="again_compute_flag" property="againComputeFlag" />
        <result column="current_compute_flag" property="currentComputeFlag" />
        <result column="compute_social_security_flag" property="computeSocialSecurityFlag" />
        <result column="pay_wages_flag" property="payWagesFlag" />
        <result column="standard_attendance_days" property="standardAttendanceDays" />
        <result column="delete_flag" property="deleteFlag" />
        <result column="create_id" property="createId" />
        <result column="create_name" property="createName" />
        <result column="create_time" property="createTime" />
        <result column="edit_id" property="editId" />
        <result column="edit_name" property="editName" />
        <result column="edit_time" property="editTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, user_account, user_role_name, salary_dept_name, salary_date, new_entry_attendance_days, positive_before_attendance_days, positive_after_attendance_days, positive_after_other_attendance_days, positive_after_sick_attendance_days, positive_before_other_attendance_days, positive_before_sick_attendance_days, other_absence_days, sick_adsence_days, month_rewords_money, month_performance_ratio, month_bank_salary, month_other_bank_salary, month_base_salary, month_performance_salary, month_post_salary, month_post_subsidy, month_other_subsidy, tax_before_base_salary_total, yangl_person_pay_money, yangl_company_pay_money, shiy_person_pay_money, shiy_company_pay_money, gongs_person_pay_money, gongs_company_pay_money, shengy_person_pay_money, shengy_company_pay_money, yil_person_pay_money, yil_company_pay_money, other_person_pay_money, other_company_pay_money, social_security_person_pay_total, socail_security_company_pay_total, housing_fund_person_pay_total, housing_fund_company_pay_total, month_person_pay_total, month_company_pay_total, month_person_company_pay_total, bank_tax_before_should_salary, bank_taxable_self_money, bank_tax_ratio, bank_plan_should_tax_money, bank_reality_should_tax_money, bank_reality_salary, other_bank_should_tax_money, other_bank_reality_salary, month_salary_reality_total, add_computer_subsidy, add_other_subsidy, deduct_sick, deduct_thing, deduct_other, deduct_service_fee, salary_dept_id, again_compute_flag, current_compute_flag, compute_social_security_flag, pay_wages_flag, standard_attendance_days, delete_flag, create_id, create_name, create_time, edit_id, edit_name, edit_time
    </sql>

    <!-- 查询用户计薪列表-->
    <select id="selectUserListBySalaryUser" resultType="com.tyzq.salary.model.vo.salary.UserComputeResultVO">
        SELECT
            u.user_name AS userName,
            u.user_entry_date AS userEntryDate,
            u.reality_change_formal_date AS realityChangeFormalDate,
            u.household_type AS householdType,
            s.id AS id,
            s.user_id AS userId,
            s.user_account AS userAccount,
            s.salary_dept_id AS salaryDeptId,
            s.salary_dept_name AS salaryDeptName,
            s.user_role_name AS userRoleName,
            s.salary_date AS salaryDate,
            s.new_entry_attendance_days AS newEntryAttendanceDays,
            s.positive_before_attendance_days AS positiveBeforeAttendanceDays,
            s.positive_before_other_attendance_days AS positiveBeforeOtherAttendanceDays,
            s.positive_before_sick_attendance_days AS positiveBeforeSickAttendanceDays,
            s.positive_after_attendance_days AS positiveAfterAttendanceDays,
            s.positive_after_other_attendance_days AS positiveAfterOtherAttendanceDays,
            s.positive_after_sick_attendance_days AS positiveAfterSickAttendanceDays,
            s.other_absence_days AS otherAbsenceDays,
            s.sick_adsence_days AS sickAdsenceDays,
            s.month_rewords_money AS monthRewordsMoney,
            s.month_performance_ratio AS monthPerformanceRatio,
            s.month_bank_salary AS monthBankSalary,
            s.month_other_bank_salary AS monthOtherBankSalary,
            s.month_base_salary AS monthBaseSalary,
            s.month_performance_salary AS monthPerformanceSalary,
            s.month_post_salary AS monthPostSalary,
            s.month_post_subsidy AS monthPostSubsidy,
            s.month_other_subsidy AS monthOtherSubsidy,
            s.tax_before_base_salary_total AS taxBeforeBaseSalaryTotal,
            s.yangl_person_pay_money AS yanglPersonPayMoney,
            s.yangl_company_pay_money AS yanglCompanyPayMoney,
            s.shiy_person_pay_money AS shiyPersonPayMoney,
            s.shiy_company_pay_money AS shiyCompanyPayMoney,
            s.gongs_person_pay_money AS gongsPersonPayMoney,
            s.gongs_company_pay_money AS gongsCompanyPayMoney,
            s.shengy_person_pay_money AS shengyPersonPayMoney,
            s.shengy_company_pay_money AS shengyCompanyPayMoney,
            s.yil_person_pay_money AS yilPersonPayMoney,
            s.yil_company_pay_money AS yilCompanyPayMoney,
            s.other_person_pay_money AS otherPersonPayMoney,
            s.other_company_pay_money AS otherCompanyPayMoney,
            s.social_security_person_pay_total AS socialSecurityPersonPayTotal,
            s.socail_security_company_pay_total AS socailSecurityCompanyPayTotal,
            s.housing_fund_person_pay_total AS housingFundPersonPayTotal,
            s.housing_fund_company_pay_total AS housingFundCompanyPayTotal,
            s.month_person_pay_total AS monthPersonPayTotal,
            s.month_company_pay_total AS monthCompanyPayTotal,
            s.month_person_company_pay_total AS monthPersonCompanyPayTotal,
            s.bank_tax_before_should_salary AS bankTaxBeforeShouldSalary,
            s.bank_taxable_self_money AS bankTaxableSelfMoney,
            s.bank_tax_ratio AS bankTaxRatio,
            s.bank_plan_should_tax_money AS bankPlanShouldTaxMoney,
            s.bank_reality_should_tax_money AS bankRealityShouldTaxMoney,
            s.bank_reality_salary AS bankRealitySalary,
            s.other_bank_should_tax_money AS otherBankShouldTaxMoney,
            s.other_bank_reality_salary AS otherBankRealitySalary,
            s.again_compute_flag AS againComputeFlag,
            s.current_compute_flag AS currentComputeFlag,
            s.compute_social_security_flag AS computeSocialSecurityFlag,
            s.pay_wages_flag AS payWagesFlag,
            s.add_computer_subsidy AS addComputerSubsidy,
            s.add_other_subsidy AS addOtherSubsidy,
            s.deduct_sick AS deductSick,
            s.deduct_thing AS deductThing,
            s.deduct_other AS deductOther,
            s.deduct_service_fee AS deductServiceFee,
            s.month_salary_reality_total AS monthSalaryRealityTotal
        FROM
            user AS u
        LEFT JOIN user_salary AS s ON u.id = s.user_id
        <where>
            u.delete_flag = 0
            AND u.admin_flag = 0
            AND s.again_compute_flag = 0
            <if test="userVO.userName != null and userVO.userName != ''">
                AND u.user_name like CONCAT('%', #{userVO.userName}, '%')
            </if>
            <if test="userVO.userSalaryDeptId != null">
                AND u.salary_dept_id = #{userVO.userSalaryDeptId}
            </if>
            <if test="userVO.userPostType == null">
                AND u.user_post_type != 0
            </if>
            <if test="userVO.userPostType != null">
                AND u.user_post_type = 0
            </if>
            /* 为2代表正常员工，我们即用员工实际转正日期小于上月1号*/
            <if test="userVO.menuType == 2">
                AND (u.reality_change_formal_date <![CDATA[<]]> #{userVO.thisDateLastMonth} or u.reality_change_formal_date <![CDATA[>=]]> #{userVO.thisDateMonth})
                AND (u.user_entry_date <![CDATA[<]]> #{userVO.thisDateLastMonth} or u.user_entry_date <![CDATA[>]]> #{userVO.thisDateMonth})
            </if>
            /* 为0查询上月入职员工，我们即用入职日期大于上月1号 并且 小于本月1号*/
            <if test="userVO.menuType == 0">
                AND u.user_entry_date <![CDATA[>=]]> #{userVO.thisDateLastMonth} AND u.user_entry_date <![CDATA[<]]> #{userVO.thisDateMonth}
            </if>
            /* 为1查询上月转正员工，我们即用实际转正日期大于上月1号 并且 小于本月1号*/
            <if test="userVO.menuType == 1">
                AND u.reality_change_formal_date <![CDATA[>=]]> #{userVO.thisDateLastMonth} AND u.reality_change_formal_date <![CDATA[<]]> #{userVO.thisDateMonth}
            </if>
            ORDER BY u.user_entry_date DESC, u.create_time DESC
        </where>
    </select>

    <!-- 查询薪资表id集合-->
    <select id="selectUserSalaryList" resultType="java.lang.Long">
        SELECT
            s.id
        FROM
            user AS u
        LEFT JOIN user_salary AS s ON u.id = s.user_id
        <where>
            u.delete_flag = 0
            AND u.admin_flag = 0
            AND s.again_compute_flag = 0
            AND s.delete_flag = 0
            <if test="thisDateLastMonth != null">
                AND s.salary_date <![CDATA[=]]> #{thisDateLastMonth}
            </if>
            <if test="currentComputeFlag != null">
                AND s.current_compute_flag = #{currentComputeFlag}
            </if>
            <if test="userPostType != null and userPostType != ''">
                AND u.user_post_type = 0
            </if>
            <if test="userPostType == null">
                AND u.user_post_type != 0
            </if>
            AND s.salary_dept_id in
                <foreach collection="salaryDeptIdList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
        </where>
    </select>

    <!-- 根据薪资表id集合，查询薪资表集合-->
    <select id="selectUserListByIds" resultType="com.tyzq.salary.model.vo.salary.UserComputeResultVO">
        SELECT
            u.user_name AS userName,
            u.user_entry_date AS userEntryDate,
            u.reality_change_formal_date AS realityChangeFormalDate,
            u.household_type AS householdType,
            s.id AS id,
            s.user_id AS userId,
            s.user_account AS userAccount,
            s.salary_dept_id AS salaryDeptId,
            s.salary_dept_name AS salaryDeptName,
            s.user_role_name AS userRoleName,
            s.salary_date AS salaryDate,
            s.new_entry_attendance_days AS newEntryAttendanceDays,
            s.positive_before_attendance_days AS positiveBeforeAttendanceDays,
            s.positive_before_other_attendance_days AS positiveBeforeOtherAttendanceDays,
            s.positive_before_sick_attendance_days AS positiveBeforeSickAttendanceDays,
            s.positive_after_attendance_days AS positiveAfterAttendanceDays,
            s.positive_after_other_attendance_days AS positiveAfterOtherAttendanceDays,
            s.positive_after_sick_attendance_days AS positiveAfterSickAttendanceDays,
            s.other_absence_days AS otherAbsenceDays,
            s.sick_adsence_days AS sickAdsenceDays,
            s.month_rewords_money AS monthRewordsMoney,
            s.month_performance_ratio AS monthPerformanceRatio,
            s.month_bank_salary AS monthBankSalary,
            s.month_other_bank_salary AS monthOtherBankSalary,
            s.month_base_salary AS monthBaseSalary,
            s.month_performance_salary AS monthPerformanceSalary,
            s.month_post_salary AS monthPostSalary,
            s.month_post_subsidy AS monthPostSubsidy,
            s.month_other_subsidy AS monthOtherSubsidy,
            s.tax_before_base_salary_total AS taxBeforeBaseSalaryTotal,
            s.yangl_person_pay_money AS yanglPersonPayMoney,
            s.yangl_company_pay_money AS yanglCompanyPayMoney,
            s.shiy_person_pay_money AS shiyPersonPayMoney,
            s.shiy_company_pay_money AS shiyCompanyPayMoney,
            s.gongs_person_pay_money AS gongsPersonPayMoney,
            s.gongs_company_pay_money AS gongsCompanyPayMoney,
            s.shengy_person_pay_money AS shengyPersonPayMoney,
            s.shengy_company_pay_money AS shengyCompanyPayMoney,
            s.yil_person_pay_money AS yilPersonPayMoney,
            s.yil_company_pay_money AS yilCompanyPayMoney,
            s.other_person_pay_money AS otherPersonPayMoney,
            s.other_company_pay_money AS otherCompanyPayMoney,
            s.social_security_person_pay_total AS socialSecurityPersonPayTotal,
            s.socail_security_company_pay_total AS socailSecurityCompanyPayTotal,
            s.housing_fund_person_pay_total AS housingFundPersonPayTotal,
            s.housing_fund_company_pay_total AS housingFundCompanyPayTotal,
            s.month_person_pay_total AS monthPersonPayTotal,
            s.month_company_pay_total AS monthCompanyPayTotal,
            s.month_person_company_pay_total AS monthPersonCompanyPayTotal,
            s.bank_tax_before_should_salary AS bankTaxBeforeShouldSalary,
            s.bank_taxable_self_money AS bankTaxableSelfMoney,
            s.bank_tax_ratio AS bankTaxRatio,
            s.bank_plan_should_tax_money AS bankPlanShouldTaxMoney,
            s.bank_reality_should_tax_money AS bankRealityShouldTaxMoney,
            s.bank_reality_salary AS bankRealitySalary,
            s.other_bank_should_tax_money AS otherBankShouldTaxMoney,
            s.other_bank_reality_salary AS otherBankRealitySalary,
            s.again_compute_flag AS againComputeFlag,
            s.current_compute_flag AS currentComputeFlag,
            s.compute_social_security_flag AS computeSocialSecurityFlag,
            s.pay_wages_flag AS payWagesFlag,
            s.add_computer_subsidy AS addComputerSubsidy,
            s.add_other_subsidy AS addOtherSubsidy,
            s.deduct_sick AS deductSick,
            s.deduct_thing AS deductThing,
            s.deduct_other AS deductOther,
            s.deduct_service_fee AS deductServiceFee,
            s.month_salary_reality_total AS monthSalaryRealityTotal
        FROM
            user AS u
        LEFT JOIN user_salary AS s ON u.id = s.user_id
        <where>
            u.delete_flag = 0
            And u.admin_flag = 0
            AND s.id in
            <foreach collection="salaryIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            /* 为2代表正常员工，我们即用员工实际转正日期小于上月1号*/
            <if test="userVO.menuType == 2">
                AND (u.reality_change_formal_date <![CDATA[<]]> #{userVO.thisDateLastMonth} or u.reality_change_formal_date <![CDATA[>=]]> #{userVO.thisDateMonth})
                AND (u.user_entry_date <![CDATA[<]]> #{userVO.thisDateLastMonth} or u.user_entry_date <![CDATA[>]]> #{userVO.thisDateMonth})
            </if>
            /* 为0查询上月入职员工，我们即用入职日期大于上月1号 并且 小于本月1号*/
            <if test="userVO.menuType == 0">
                AND u.user_entry_date <![CDATA[>=]]> #{userVO.thisDateLastMonth} AND u.user_entry_date <![CDATA[<]]> #{userVO.thisDateMonth}
            </if>
            /* 为1查询上月转正员工，我们即用实际转正日期大于上月1号 并且 小于本月1号*/
            <if test="userVO.menuType == 1">
                AND u.reality_change_formal_date <![CDATA[>=]]> #{userVO.thisDateLastMonth} AND u.reality_change_formal_date <![CDATA[<]]> #{userVO.thisDateMonth}
            </if>
            ORDER BY u.user_entry_date DESC, u.create_time DESC
        </where>
    </select>

    <!-- 查询历史工资单列表-->
    <select id="selectHistorySalaryList" resultType="com.tyzq.salary.model.vo.salary.SalaryHistoryResultVO">
        SELECT
            u.user_name AS userName,
            u.user_card AS userCard,
            u.user_tel AS userTel,
            u.user_account AS userAccount,
            u.user_entry_date AS userEntryDate,
            u.reality_change_formal_date AS realityChangeFormalDate,
            u.user_leave_date AS userLeaveDate,
            u.user_dept_id AS userDeptId,
            u.salary_dept_id AS salaryDeptId,
            u.remark AS remark,
            u.household_type AS householdType,
            u.salary_bank_card AS salaryBankCard,
            u.salary_bank_open AS salaryBankOpen,
            u.salary_bank_open_name AS salaryBankOpenName,
            u.salary_bank_open_province AS salaryBankOpenProvince,
            u.salary_bank_open_province AS salaryBankOpenCity,
            u.other_bank_card AS otherBankCard,
            u.other_bank_open AS otherBankOpen,
            u.other_bank_open_name AS otherBankOpenName,
            u.other_bank_open_province AS otherBankOpenProvince,
            u.other_bank_open_city AS otherBankOpenCity,
            u.social_security_card AS socialSecurityCard,
            u.social_security_start_date AS socialSecurityStartDate,
            u.work_city AS workCity,
            u.user_post_type AS userPostType,
            u.user_rank_type AS userRankType,

            d.total_income_money AS totalIncomeMoney,
            d.total_taxable_self_money AS totalTaxableSelfMoney,
            d.total_already_taxable_money AS totalAlreadyTaxableMoney,
            d.total_deduct_money AS totalDeductMoney,
            d.total_special_deduct_money AS totalSpecialDeductMoney,
            d.total_child_education AS totalChildEducation,
            d.total_continue_education AS totalContinueEducation,
            d.total_home_loan_interest AS totalHomeLoanInterest,
            d.total_home_rents AS totalHomeRents,
            d.total_support_parents AS totalSupportParents,
            d.total_support_parents AS totalOtherDeduct,
            d.compute_standard_salary AS computeStandardSalary,
            d.child_education AS childEducation,
            d.continue_education AS continueEducation,
            d.home_loan_interest AS homeLoanInterest,
            d.home_rents AS homeRents,
            d.support_parents AS supportParents,
            d.special_deduct_total AS specialDeductTotal,

            s.id AS id,
            s.user_id AS userId,
            s.user_account AS userAccount,
            s.salary_dept_id AS salaryDeptId,
            s.salary_dept_name AS salaryDeptName,
            s.user_role_name AS userRoleName,
            s.salary_date AS salaryDate,
            s.new_entry_attendance_days AS newEntryAttendanceDays,
            s.positive_before_attendance_days AS positiveBeforeAttendanceDays,
            s.positive_before_other_attendance_days AS positiveBeforeOtherAttendanceDays,
            s.positive_before_sick_attendance_days AS positiveBeforeSickAttendanceDays,
            s.positive_after_attendance_days AS positiveAfterAttendanceDays,
            s.positive_after_other_attendance_days AS positiveAfterOtherAttendanceDays,
            s.positive_after_sick_attendance_days AS positiveAfterSickAttendanceDays,
            s.other_absence_days AS otherAbsenceDays,
            s.sick_adsence_days AS sickAdsenceDays,
            s.month_rewords_money AS monthRewordsMoney,
            s.month_performance_ratio AS monthPerformanceRatio,
            s.month_bank_salary AS monthBankSalary,
            s.month_other_bank_salary AS monthOtherBankSalary,
            s.month_base_salary AS monthBaseSalary,
            s.month_performance_salary AS monthPerformanceSalary,
            s.month_post_salary AS monthPostSalary,
            s.month_post_subsidy AS monthPostSubsidy,
            s.month_other_subsidy AS monthOtherSubsidy,
            d.bank_salary AS taxBeforeBaseSalaryTotal,
            s.yangl_person_pay_money AS yanglPersonPayMoney,
            s.yangl_company_pay_money AS yanglCompanyPayMoney,
            s.shiy_person_pay_money AS shiyPersonPayMoney,
            s.shiy_company_pay_money AS shiyCompanyPayMoney,
            s.gongs_person_pay_money AS gongsPersonPayMoney,
            s.gongs_company_pay_money AS gongsCompanyPayMoney,
            s.shengy_person_pay_money AS shengyPersonPayMoney,
            s.shengy_company_pay_money AS shengyCompanyPayMoney,
            s.yil_person_pay_money AS yilPersonPayMoney,
            s.yil_company_pay_money AS yilCompanyPayMoney,
            s.other_person_pay_money AS otherPersonPayMoney,
            s.other_company_pay_money AS otherCompanyPayMoney,
            s.social_security_person_pay_total AS socialSecurityPersonPayTotal,
            s.socail_security_company_pay_total AS socailSecurityCompanyPayTotal,
            s.housing_fund_person_pay_total AS housingFundPersonPayTotal,
            s.housing_fund_company_pay_total AS housingFundCompanyPayTotal,
            s.month_person_pay_total AS monthPersonPayTotal,
            s.month_company_pay_total AS monthCompanyPayTotal,
            s.month_person_company_pay_total AS monthPersonCompanyPayTotal,
            s.bank_tax_before_should_salary AS bankTaxBeforeShouldSalary,
            s.bank_taxable_self_money AS bankTaxableSelfMoney,
            s.bank_tax_ratio AS bankTaxRatio,
            s.bank_plan_should_tax_money AS bankPlanShouldTaxMoney,
            s.bank_reality_should_tax_money AS bankRealityShouldTaxMoney,
            s.bank_reality_salary AS bankRealitySalary,
            s.other_bank_should_tax_money AS otherBankShouldTaxMoney,
            s.other_bank_reality_salary AS otherBankRealitySalary,
            s.again_compute_flag AS againComputeFlag,
            s.current_compute_flag AS currentComputeFlag,
            s.compute_social_security_flag AS computeSocialSecurityFlag,
            s.pay_wages_flag AS payWagesFlag,
            s.add_computer_subsidy AS addComputerSubsidy,
            s.add_other_subsidy AS addOtherSubsidy,
            s.deduct_sick AS deductSick,
            s.deduct_thing AS deductThing,
            s.deduct_other AS deductOther,
            s.deduct_service_fee AS deductServiceFee,
            s.month_salary_reality_total AS monthSalaryRealityTotal
        FROM
            user AS u
        LEFT JOIN user_detail AS d ON u.id = d.user_id
        LEFT JOIN user_salary AS s ON u.id = s.user_id
        <where>
            s.delete_flag = 0
            AND u.admin_flag = 0
            AND s.again_compute_flag = 3
            <if test="queryVO.salaryDate != null">
                AND s.salary_date <![CDATA[=]]> #{queryVO.salaryDate}
            </if>
            <if test="queryVO.userName != null and queryVO.userName != ''">
                AND u.user_name like CONCAT('%', #{queryVO.userName}, '%')
            </if>
            <if test="queryVO.userPostType != null">
                AND u.user_post_type = #{queryVO.userPostType}
            </if>
            <if test="queryVO.salaryDeptId != null">
                AND s.salary_dept_id = #{queryVO.salaryDeptId}
            </if>
            ORDER BY u.user_entry_date DESC, u.create_time DESC
        </where>
    </select>

    <!-- 根据账号 & 月份 查询个人月度工资单-->
    <select id="querySalaryExternal" resultType="com.tyzq.salary.model.vo.external.ExternalSalaryResultVO">
        SELECT
            u.user_name AS userName,
            u.user_account AS userAccount,
            s.salary_dept_name AS salaryDeptName,
            s.user_role_name AS userRoleName,
            s.month_rewords_money AS monthRewordsMoney,
            s.month_bank_salary AS monthBankSalary,
            s.month_other_bank_salary AS monthOtherBankSalary,
            s.month_base_salary AS monthBaseSalary,
            s.month_performance_salary AS monthPerformanceSalary,
            s.social_security_person_pay_total AS socialSecurityPersonPayTotal,
            s.housing_fund_person_pay_total AS housingFundPersonPayTotal,
            s.month_person_pay_total AS monthPersonPayTotal,
            s.bank_tax_before_should_salary AS bankTaxBeforeShouldSalary,
            s.bank_tax_ratio AS bankTaxRatio,
            s.bank_reality_should_tax_money AS bankRealityShouldTaxMoney,
            s.bank_reality_salary AS bankRealitySalary,
            s.other_bank_should_tax_money AS otherBankShouldTaxMoney,
            s.other_bank_reality_salary AS otherBankRealitySalary,
            s.add_computer_subsidy AS addComputerSubsidy,
            s.add_other_subsidy AS addOtherSubsidy,
            s.deduct_sick AS deductSick,
            s.deduct_thing AS deductThing,
            s.deduct_other AS deductOther,
            s.deduct_service_fee AS deductServiceFee,
            s.month_salary_reality_total AS monthSalaryRealityTotal
        FROM
            user AS u
        LEFT JOIN user_salary AS s ON u.id = s.user_id
        <where>
            u.delete_flag = 0
            AND u.admin_flag = 0
            AND s.again_compute_flag = 3
            AND s.pay_wages_flag = 1
            <if test="salaryDate != null">
                AND s.salary_date <![CDATA[=]]> #{salaryDate}
            </if>
            <if test="userAccount != null">
                AND s.user_account = #{userAccount}
            </if>
        </where>
    </select>
</mapper>
